{"ast":null,"code":"var _jsxFileName = \"/Users/jang-ahyeon/Desktop/cloudsystem/iv-mate/src/pages/test.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"../css/test.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TestPage = ({\n  gptApi\n}) => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [answers, setAnswers] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n  const [isFollowUp, setIsFollowUp] = useState(false); // 꼬리질문 여부\n  const [feedbackReady, setFeedbackReady] = useState(false); // 피드백 준비 여부\n\n  useEffect(() => {\n    // 페이지 로딩 시 GPT에게 사용자 정보를 보내 질문 생성 요청\n    async function fetchQuestions() {\n      setIsLoading(true);\n      try {\n        const response = await gptApi.generateQuestions(); // GPT API 호출\n        setQuestions(response.questions); // GPT로부터 받은 질문 저장\n      } catch (error) {\n        console.error(\"질문 생성 실패\", error);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchQuestions();\n  }, [gptApi]);\n  const handleNextQuestion = async () => {\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(prev => prev + 1); // 다음 질문으로 이동\n    } else if (currentQuestionIndex === questions.length - 1 && !isFollowUp) {\n      setFeedbackReady(true); // 피드백 버튼 표시\n    } else {\n      // 꼬리질문 진행 중 마지막 질문 완료\n      setFeedbackReady(true);\n    }\n  };\n  const handleSendAnswer = async () => {\n    // DB에 답변 저장\n    try {\n      await gptApi.saveAnswer({\n        question: questions[currentQuestionIndex],\n        answer: answers[currentQuestionIndex] || \"\"\n      });\n    } catch (error) {\n      console.error(\"답변 저장 실패\", error);\n    }\n\n    // 다음 질문으로 이동\n    handleNextQuestion();\n  };\n  const handleFollowUp = async () => {\n    // GPT에게 꼬리질문 요청\n    setIsLoading(true);\n    try {\n      const response = await gptApi.generateFollowUpQuestions();\n      setQuestions(response.questions);\n      setCurrentQuestionIndex(0); // 질문 인덱스 초기화\n      setIsFollowUp(true); // 꼬리질문 진행\n    } catch (error) {\n      console.error(\"꼬리질문 생성 실패\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleFeedback = async () => {\n    // GPT에게 모든 질문과 답변을 보내 피드백 생성\n    setIsLoading(true);\n    try {\n      const response = await gptApi.getFeedback({\n        questions,\n        answers\n      });\n      console.log(\"GPT 피드백:\", response.feedback);\n      alert(\"피드백이 생성되었습니다!\"); // 임시 메시지\n    } catch (error) {\n      console.error(\"피드백 생성 실패\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uB85C\\uB529 \\uC911... \\uC7A0\\uC2DC\\uB9CC \\uAE30\\uB2E4\\uB824\\uC8FC\\uC138\\uC694.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 12\n    }, this); // 로딩 메시지\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"test-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uBA74\\uC811 \\uC2DC\\uBBAC\\uB808\\uC774\\uC158\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), currentQuestionIndex < questions.length && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: questions[currentQuestionIndex]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"\\uB2F5\\uBCC0\\uC744 \\uC791\\uC131\\uD574\\uC8FC\\uC138\\uC694\",\n        value: answers[currentQuestionIndex] || \"\",\n        onChange: e => setAnswers({\n          ...answers,\n          [currentQuestionIndex]: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendAnswer,\n        disabled: !answers[currentQuestionIndex],\n        children: \"\\uC804\\uC1A1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), currentQuestionIndex === questions.length && !isFollowUp && !feedbackReady && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"followup-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFollowUp,\n        children: \"\\uAF2C\\uB9AC\\uC9C8\\uBB38 \\uBC1B\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFeedback,\n        children: \"\\uBA74\\uC811 \\uD53C\\uB4DC\\uBC31 \\uBC1B\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }, this), feedbackReady && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFeedback,\n      children: \"\\uBA74\\uC811 \\uD53C\\uB4DC\\uBC31 \\uBC1B\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(TestPage, \"e/ZvjhpnGIayxKkTwqG9sv7Hhc0=\");\n_c = TestPage;\nexport default TestPage;\nvar _c;\n$RefreshReg$(_c, \"TestPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TestPage","gptApi","_s","questions","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","answers","setAnswers","isLoading","setIsLoading","isFollowUp","setIsFollowUp","feedbackReady","setFeedbackReady","fetchQuestions","response","generateQuestions","error","console","handleNextQuestion","length","prev","handleSendAnswer","saveAnswer","question","answer","handleFollowUp","generateFollowUpQuestions","handleFeedback","getFeedback","log","feedback","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","className","placeholder","value","onChange","e","target","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/jang-ahyeon/Desktop/cloudsystem/iv-mate/src/pages/test.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../css/test.css\";\n\nconst TestPage = ({ gptApi }) => {\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [answers, setAnswers] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n  const [isFollowUp, setIsFollowUp] = useState(false); // 꼬리질문 여부\n  const [feedbackReady, setFeedbackReady] = useState(false); // 피드백 준비 여부\n\n  useEffect(() => {\n    // 페이지 로딩 시 GPT에게 사용자 정보를 보내 질문 생성 요청\n    async function fetchQuestions() {\n      setIsLoading(true);\n      try {\n        const response = await gptApi.generateQuestions(); // GPT API 호출\n        setQuestions(response.questions); // GPT로부터 받은 질문 저장\n      } catch (error) {\n        console.error(\"질문 생성 실패\", error);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchQuestions();\n  }, [gptApi]);\n\n  const handleNextQuestion = async () => {\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex((prev) => prev + 1); // 다음 질문으로 이동\n    } else if (currentQuestionIndex === questions.length - 1 && !isFollowUp) {\n      setFeedbackReady(true); // 피드백 버튼 표시\n    } else {\n      // 꼬리질문 진행 중 마지막 질문 완료\n      setFeedbackReady(true);\n    }\n  };\n\n  const handleSendAnswer = async () => {\n    // DB에 답변 저장\n    try {\n      await gptApi.saveAnswer({\n        question: questions[currentQuestionIndex],\n        answer: answers[currentQuestionIndex] || \"\",\n      });\n    } catch (error) {\n      console.error(\"답변 저장 실패\", error);\n    }\n\n    // 다음 질문으로 이동\n    handleNextQuestion();\n  };\n\n  const handleFollowUp = async () => {\n    // GPT에게 꼬리질문 요청\n    setIsLoading(true);\n    try {\n      const response = await gptApi.generateFollowUpQuestions();\n      setQuestions(response.questions);\n      setCurrentQuestionIndex(0); // 질문 인덱스 초기화\n      setIsFollowUp(true); // 꼬리질문 진행\n    } catch (error) {\n      console.error(\"꼬리질문 생성 실패\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleFeedback = async () => {\n    // GPT에게 모든 질문과 답변을 보내 피드백 생성\n    setIsLoading(true);\n    try {\n      const response = await gptApi.getFeedback({ questions, answers });\n      console.log(\"GPT 피드백:\", response.feedback);\n      alert(\"피드백이 생성되었습니다!\"); // 임시 메시지\n    } catch (error) {\n      console.error(\"피드백 생성 실패\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  if (isLoading) {\n    return <p>로딩 중... 잠시만 기다려주세요.</p>; // 로딩 메시지\n  }\n\n  return (\n    <div className=\"test-container\">\n      <h2>면접 시뮬레이션</h2>\n      {currentQuestionIndex < questions.length && (\n        <div className=\"question-box\">\n          <h3>{questions[currentQuestionIndex]}</h3>\n          <textarea\n            placeholder=\"답변을 작성해주세요\"\n            value={answers[currentQuestionIndex] || \"\"}\n            onChange={(e) =>\n              setAnswers({ ...answers, [currentQuestionIndex]: e.target.value })\n            }\n          />\n          <button\n            onClick={handleSendAnswer}\n            disabled={!answers[currentQuestionIndex]}\n          >\n            전송\n          </button>\n        </div>\n      )}\n\n      {currentQuestionIndex === questions.length &&\n        !isFollowUp &&\n        !feedbackReady && (\n          <div className=\"followup-container\">\n            <button onClick={handleFollowUp}>꼬리질문 받기</button>\n            <button onClick={handleFeedback}>면접 피드백 받기</button>\n          </div>\n        )}\n\n      {feedbackReady && (\n        <button onClick={handleFeedback}>면접 피드백 받기</button>\n      )}\n    </div>\n  );\n};\n\nexport default TestPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}